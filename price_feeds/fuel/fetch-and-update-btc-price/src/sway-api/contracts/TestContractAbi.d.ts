/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.89.0
  Forc version: 0.60.0
  Fuel-Core version: 0.26.0
*/

import type {
  BigNumberish,
  BN,
  Bytes,
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Vec } from "./common";

export type PriceInput = { confidence: BigNumberish, exponent: BigNumberish, price: BigNumberish, publish_time: BigNumberish };
export type PriceOutput = { confidence: BN, exponent: number, price: BN, publish_time: BN };

interface TestContractAbiInterface extends Interface {
  functions: {
    get_price: FunctionFragment;
    update_price_feeds: FunctionFragment;
  };

  encodeFunctionData(functionFragment: 'get_price', values: []): Uint8Array;
  encodeFunctionData(functionFragment: 'update_price_feeds', values: [Vec<Bytes>]): Uint8Array;

  decodeFunctionData(functionFragment: 'get_price', data: BytesLike): DecodedValue;
  decodeFunctionData(functionFragment: 'update_price_feeds', data: BytesLike): DecodedValue;
}

export class TestContractAbi extends Contract {
  interface: TestContractAbiInterface;
  functions: {
    get_price: InvokeFunction<[], PriceOutput>;
    update_price_feeds: InvokeFunction<[update_data: Vec<Bytes>], void>;
  };
}
